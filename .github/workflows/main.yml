name: GitHub Actions Main
on:
  push:
    tags:
      - '*'
    branches:
      main

jobs:
  UnitTests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18'
          cache: 'maven'
      - name: Unit Test
        run: mvn --batch-mode -Dmaven.test.failure.ignore=true test

  release-build-and-push:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - UnitTests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Create a new tag
        uses: phish108/autotag-action@1.1.37
        id: autotag
        continue-on-error: true
      - name: Create a new release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.autotag.outputs.new-tag }}
        continue-on-error: true
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
#
#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#          flavor: |
#            latest=true
#          tags: |
#            type=ref,event=branch
#            type=semver,pattern={{version}},value=${{ steps.autotag.outputs.new-tag }}
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: ./src/main
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}

  notifyFail:
    name: "Notify Slack Channel #fail"
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    needs:
      - UnitTests
      - release-build-and-push
    steps:
      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}

